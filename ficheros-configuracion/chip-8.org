#+TITLE: chip-8
#+AUTHOR: Maxxcan Fox
#+EMAIL: maxxcan@disroot.org

* Introducción

CHIP-8 es un lenguaje de programación interpretado, desarrollado por Joseph Weisbecker. Fue inicialmente usado en los microcomputadores de 8 bits COSMAC VIP y Telmac 1800 a mediados de 1970. Los programas de CHIP-8 corren sobre una máquina virtual de CHIP-8. Esto se hizo así para que los video juegos fueran más fáciles de programar en otros computadores. Más información en la [[https://en.wikipedia.org/wiki/CHIP-8][wikipedia]].

A día de hoy hay una implementación de CHIP-8 para casi todas las plataformas imaginables, así como algunas herramientas de desarrollo. A pesar de eso, solo hay un pequeño número de juegos para CHIP-8.

** El emulador en Emacs 

Sumándose a la gran cantidad de implementaciones que hay en otras plataformas el dearrollador [[https://github.com/wasamasa][Vasilij Schneidermann]] ha realizado también una para Emacs. 

El emulador lo podemos descargar de [[https://depp.brause.cc/chip8.el/][aquí]]. 

* Configuración 

Para activar el modo chip-8 en Emacs hay que descargarlo manualmente bien con Git con la orden: 

#+BEGIN_SRC bash
git clone https://depp.brause.cc/chip8.el.git
#+END_SRC

Lo podemos descargar en cualquier sitio, yo uso la carpeta .emacs.d/local/packages/ y lo añadimos a la configuración de Emacs de la siguiente manera

#+NAME: chip-8
#+BEGIN_SRC emacs-lisp
(add-to-list 'load-path "~/.emacs.d/local/packages/chip8.el/")
(load "chip8")
#+END_SRC

* Emulando el sonido 

Es difícil que Emacs reproduzca sonidos, por ello la forma de que este emulador produzca sonidos es con el siguiente código y usando el programa /mpv/. 

#+NAME: sonido
#+BEGIN_SRC emacs-lisp
(defvar my-chip8-mpv-fifo (expand-file-name "/path/to/mpv-fifo")
(defvar my-chip8-beep-file (expand-file-name "/path/to/beep.ogg"))

(defun my-chip8-make-fifo ()
  (shell-command-to-string (concat "mkfifo " my-chip8-mpv-fifo)))

(defun my-chip8-write-to-fifo (string)
  (with-temp-buffer
    (insert string)
    (write-region (point-min) (point-max) my-chip8-mpv-fifo nil 'nomessage)))

(defun my-chip8-beep-start ()
  (my-chip8-write-to-fifo "set pause no\n"))

(defun my-chip8-beep-stop ()
  (my-chip8-write-to-fifo "set pause yes\n"))

(defvar my-chip8-mpv-process nil)

(defun my-chip8-start-mpv ()
  (setq my-chip8-mpv-process
        (start-process "mpv" "*mpv*" "mpv"
                       "--loop" "--pause" "--input-file"
                       my-chip8-mpv-fifo my-chip8-beep-file)))

(defun my-chip8-mode-hook ()
  (when my-chip8-mpv-process
    (stop-process my-chip8-mpv-process))
  (my-chip8-make-fifo)
  (my-chip8-start-mpv))

(add-hook 'chip8-mode-hook 'my-chip8-mode-hook)

(setq chip8-beep-start-function 'my-chip8-beep-start)
(setq chip8-beep-stop-function 'my-chip8-beep-stop)

#+END_SRC


* Juntando el código


#+BEGIN_SRC emacs-lisp :tangle ~/.config/emacs/config/chip-8.el :noweb yes :padline no :results silent
<<chip-8>>
<<sonido>>
#+END_SRC

* Exportando

Tal como he indicado en la propia plantilla para exportar el código podemos usar la combinación de teclas C-c C-v t (C es control) o bien escribir en el minibuffer con Alt-x, org-babel-tangle
